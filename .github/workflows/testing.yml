name: PHPUnit tests
# Triggers when code is pushed to any branch or any pull request is made.
on: [push, pull_request]
jobs:
  testing:
    name: PHP ${{ matrix.php-versions }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # php-versions: ['7.1', '7.2', '7.3', '7.4']
        php-versions: ['7.3']
        phpstan: ['1']
        # Extra run to also test on PHP 7.0 without PHPStan.
        # include:
        #   - php-versions: '7.0'
        #     phpstan: '0'

    steps:
      - name: Checkout Scheduler
        uses: actions/checkout@v2

      # - name: Setup PHP, with composer and extensions
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring

      # Two steps from Coder
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      # - name: Cache composer dependencies
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      # From thunder/drupal-testing
      # - name: Cache composer dependencies
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.composer/cache
      #     key: ${{ runner.os }}-composer-cache-${{ hashFiles('**/composer.json') }}
      #     restore-keys: ${{ runner.os }}-composer-cache-

      - name: Install Composer dependencies
        run: composer install --no-progress --dev
        # --prefer-dist --optimize-autoloader

      - name: Install Drupal core
        run: composer require drupal/core-recommended --with-all-dependencies
          
      - name: Look around for things
        run: |
          pwd
          ls -laG
          cd vendor
          pwd
          ls -laG
          cd bin
          pwd
          ls -laG
          cd /home/runner/work/scheduler
          pwd
          ls -laG

      - name: Start the local web server
        run: php -S localhost:8000 -t web 2>&1 &
        # if: matrix.test-types == 'functional'

      - name: Run PHPUnit plain
        run: |
          pwd
          ./vendor/bin/phpunit --color=always
          ./vendor/bin/phpunit -c ./core/phpunit.xml.dist --debug ./modules/$MODULE/tests/
        env:
          SIMPLETEST_BASE_URL: http://localhost:8000
